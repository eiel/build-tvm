name: TVM Windows Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*' # タグがプッシュされたときにリリースを作成
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: カレントディレクトリの確認
        run: pwd

      - name: CMakeの存在確認
        run: cmake --version

      - name: Windows用の長いパス名を有効化
        if: runner.os == 'Windows'
        run: git config --global core.longpaths true

      - name: ccacheのインストール
        run: |
          choco install ccache
          echo "CCACHE_DIR=${{ github.workspace }}/.ccache" >> $env:GITHUB_ENV

      - name: ccacheのキャッシュを復元
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Pythonの依存関係をインストール
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel numpy

      - name: LLVMをインストール
        run: |
          choco install llvm --version=15.0.7 -y
          echo "LLVM_PATH=C:\Program Files\LLVM" >> $env:GITHUB_ENV
          echo "C:\Program Files\LLVM\bin" >> $env:GITHUB_PATH
          
      - name: LLVMのbinディレクトリの内容を確認
        run: |
          echo "LLVMのbinディレクトリの内容一覧:"
          Get-ChildItem -Path "C:\Program Files\LLVM\bin" | Format-Table Name, Length, LastWriteTime
          
          echo "`nllvm-configの確認:"
          if (Test-Path "C:\Program Files\LLVM\bin\llvm-config.exe") {
            echo "llvm-config.exeが存在します"
            & "C:\Program Files\LLVM\bin\llvm-config.exe" --version
          } else {
            echo "llvm-config.exeが見つかりません"
            echo "代替ファイルを探しています..."
            Get-ChildItem -Path "C:\Program Files\LLVM\bin" -Filter "*config*" | Format-Table Name, Length
          }

      - name: libtvmのソースコードをダウンロード
        uses: actions/checkout@v4
        with:
          repository: apache/tvm
          ref: v0.19.0
          submodules: recursive

      - name: libtvmを設定
        run: |
          mkdir build
          cd build
          cmake .. `
            -DSUMMARIZE=ON `
            -DUSE_LLVM="C:\Program Files\LLVM\bin\llvm-config"

      - name: libtvmをビルド
        run: |
          cd build
          cmake --build . --config Release
