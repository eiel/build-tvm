name: TVM Windows Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*' # タグがプッシュされたときにリリースを作成
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-release:
    runs-on: windows-2022
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3
    
    - name: Install dependencies with pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install numpy pytest decorator
    
    - name: Install LLVM
      run: |
        choco install llvm -y
        echo "LLVM_DIR=C:/Program Files/LLVM" | Out-File -FilePath $env:GITHUB_ENV -Append
    
    - name: Install CMake
      run: |
        choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System'
        
    - name: Clone TVM repository
      run: |
        git clone --recursive https://github.com/apache/tvm tvm
        cd tvm
        git submodule update --init --recursive
    
    - name: Configure TVM for Dynamic Libraries
      run: |
        cd tvm
        mkdir build
        cd build
        copy ..\cmake\config.cmake .
        Add-Content -Path "config.cmake" -Value 'set(USE_LLVM "C:/Program Files/LLVM/bin/llvm-config")'
        Add-Content -Path "config.cmake" -Value 'set(CMAKE_CXX_FLAGS "/EHsc")'
        Add-Content -Path "config.cmake" -Value 'set(CMAKE_BUILD_TYPE Release)'
        cmake .. -G "Visual Studio 17 2022" -A x64
    
    - name: Build TVM Dynamic Libraries
      run: |
        cd tvm/build
        cmake --build . --config Release -- /m
    
    - name: Configure TVM for Static Libraries
      run: |
        cd tvm
        mkdir build_static
        cd build_static
        copy ..\cmake\config.cmake .
        Add-Content -Path "config.cmake" -Value 'set(USE_LLVM "C:/Program Files/LLVM/bin/llvm-config")'
        Add-Content -Path "config.cmake" -Value 'set(CMAKE_CXX_FLAGS "/EHsc")'
        Add-Content -Path "config.cmake" -Value 'set(CMAKE_BUILD_TYPE Release)'
        Add-Content -Path "config.cmake" -Value 'set(BUILD_STATIC_RUNTIME ON)'
        cmake .. -G "Visual Studio 17 2022" -A x64
    
    - name: Build TVM Static Libraries
      run: |
        cd tvm/build_static
        cmake --build . --config Release -- /m
    
    - name: Setup Python Environment for TVM
      run: |
        cd tvm
        python -m pip install -e python
        
    - name: Run tests
      run: |
        cd tvm
        $env:PYTHONPATH = "$env:PYTHONPATH;$(Get-Location)/python"
        python -m pytest -xvs tests/python/unittest
    
    - name: Create artifact directory
      run: mkdir artifacts
    
    - name: Copy TVM libraries to artifacts
      run: |
        # 動的ライブラリ (DLL) をコピー
        copy tvm\build\Release\tvm.dll artifacts\libtvm.dll
        copy tvm\build\Release\tvm_runtime.dll artifacts\libtvm_runtime.dll
        copy tvm\build\Release\tvm.lib artifacts\tvm.lib
        copy tvm\build\Release\tvm_runtime.lib artifacts\tvm_runtime.lib
        
        # 静的ライブラリをコピー
        copy tvm\build_static\Release\tvm.lib artifacts\libtvm_static.lib
        copy tvm\build_static\Release\tvm_runtime.lib artifacts\libtvm_runtime_static.lib
        
        # include ヘッダーファイルもコピー
        mkdir -p artifacts\include
        xcopy /E /I tvm\include artifacts\include
    
    - name: Create ZIP archive
      run: |
        Compress-Archive -Path artifacts\* -DestinationPath tvm-windows-libraries.zip
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tvm-windows-libraries
        path: tvm-windows-libraries.zip
    
    - name: Create GitHub Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: tvm-windows-libraries.zip
        name: TVM Windows Release ${{ github.ref_name }}
        body: |
          TVM Windows ビルド (${{ github.ref_name }})
          
          このリリースには以下が含まれています：
          - libtvm.dll / libtvm_runtime.dll (動的ライブラリ)
          - tvm.lib / tvm_runtime.lib (DLLのインポートライブラリ)
          - libtvm_static.lib / libtvm_runtime_static.lib (静的ライブラリ)
          - TVM ヘッダーファイル
          
          ビルド環境: Windows Server 2022
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}