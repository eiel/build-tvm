name: TVM Windows Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*' # タグがプッシュされたときにリリースを作成
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: カレントディレクトリの確認
        run: pwd

      - name: CMakeの存在確認
        run: cmake --version

      - name: Windows用の長いパス名を有効化
        if: runner.os == 'Windows'
        run: git config --global core.longpaths true

      - name: ccacheのインストール
        run: |
          choco install ccache
          echo "CCACHE_DIR=${{ github.workspace }}/.ccache" >> $env:GITHUB_ENV

      - name: ccacheのキャッシュを復元
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-
      
      - name: ディスクの空き容量を表示
        run: Get-PSDrive -PSProvider FileSystem | Select-Object Name, @{Name="Used(GB)";Expression={[math]::round($_.Used/1GB,2)}}, @{Name="Free(GB)";Expression={[math]::round($_.Free/1GB,2)}}, @{Name="Total(GB)";Expression={[math]::round($_.Used/1GB + $_.Free/1GB,2)}}

      - name: Pythonの依存関係をインストール
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel numpy

      - name: LLVMをダウンロードしてインストール
        run: |
          $llvmVersion = "20.1.0"
          $llvmUrl = "https://github.com/llvm/llvm-project/releases/download/llvmorg-$llvmVersion/clang+llvm-$llvmVersion-x86_64-pc-windows-msvc.tar.xz"
          $llvmArchive = "llvm-$llvmVersion.tar.xz"
          $llvmDir = "D:\lib\LLVM"
          
          # ダウンロードディレクトリを作成
          New-Item -Path "${{ github.workspace }}\llvm-download" -ItemType Directory -Force
          
          # LLVMをダウンロード
          Invoke-WebRequest -Uri $llvmUrl -OutFile "${{ github.workspace }}\llvm-download\$llvmArchive"
          
          # 解凍用に7zipをインストール
          choco install 7zip -y
          
          # アーカイブを解凍
          cd "${{ github.workspace }}\llvm-download"
          7z x $llvmArchive
          $extractedFolder = Get-ChildItem -Directory | Where-Object { $_.Name -like "clang+llvm*" } | Select-Object -First 1
          Write-Host "Extracted folder path: $($extractedFolder.FullName)"
          
          # LLVMディレクトリを作成
          New-Item -Path "$llvmDir" -ItemType Directory -Force
          
          # ファイルをコピー
            Move-Item -Path "$extractedFolder\*" -Destination "$llvmDir" -Force
          
          # 環境変数を設定
            echo "LLVM_PATH=$llvmDir" >> $env:GITHUB_ENV
            echo "$llvmDir\bin" >> $env:GITHUB_PATH

          # LLVMのインストール確認とbinディレクトリの内容表示
          Write-Host "LLVM installation verification:"
          if (Test-Path "C:\Program Files\LLVM\bin") {
            Write-Host "LLVM bin directory exists"
            Write-Host "Contents of LLVM bin directory:"
            Get-ChildItem -Path "C:\Program Files\LLVM\bin" | Format-Table Name, Length, LastWriteTime
          } else {
            Write-Host "LLVM bin directory does not exist!" -ForegroundColor Red
          }
      - name: libtvmのソースコードをダウンロード
        uses: actions/checkout@v4
        with:
          repository: apache/tvm
          ref: v0.19.0
          submodules: recursive

      - name: libtvmを設定
        run: |
          mkdir build
          cd build
          cmake .. `
            -DSUMMARIZE=ON `
            -DUSE_LLVM="C:/Program\ Files/LLVM/bin/llvm-config"

      - name: libtvmをビルド
        run: |
          cd build
          cmake --build . --config Release
